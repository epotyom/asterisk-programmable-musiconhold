#
# A simple radio script to get started
# Filenames need to be edited in playlist() and single() sources
#

set("log.file.path","/tmp/liquidsoap.log") # путь к файлу лога
set("log.level", 3) # уровень логирования
#set("server.telnet", true)

# fix delay on telnet
#set("frame.size",940)

#saywhat = interactive.string("saywhat","baby")
#def gtts_say() = 
#  # Get the first line of my external process
#  result =
#    list.hd(
#      get_process_lines("/usr/scripts/liquidsoap/gtts.sh "^saywhat()))
#  # Create and return a request using this result
#  request.create(result)
#end

# Create the source
#s3 = mksafe(request.dynamic(gtts_say))

#message =
#  "The Savonet team thanks you for using liquidsoap, " ^
#  "and we hope you'll enjoy it!"

# Then we setup our icecast output function.
# Possible options and values are bitrate=64, samplerate=11025, ...
#out = output.icecast(%vorbis,host="localhost")

#input = "input.mp3"

# A source that plays the file once
#s = single("/usr/scripts/liquidsoap/mono.mp3")
#s = single("/usr/scripts/liquidsoap/mono2.mp3")
s = single("/usr/scripts/liquidsoap/mono2.wav")

# Create an interactive boolean
#b = interactive.bool("button", true)
#b = interactive.string("button","music1")

# Switch between the tracks depending on the boolean
#s = mksafe(switch(track_sensitive=false,[({"music1" == b()},s1), ({b() == "music2"},s2)]))
#s = mksafe(switch(track_sensitive=false,[({"music1" == b()},s1), ({b() == "music2"},s2), ({b() == "sayit"},s3)]))
#s = switch(track_sensitive=false,[(b,s1), ({true},s2)])

# We use a clock with disabled synchronization
clock.assign_new(sync=false,[s])

out = output.file(%external(header=false, channels=1, samplerate=8000, process="/bin/cat"), "/dev/stdout", s)


#out( #source="demo.ogg") #,
  # The scheduler plays a randomized playlist, or the .ogg file
  # if the playlist fails to stream anything. The playlist can be made
  # of remote URIs.
#out(  add([
#    # Comment out the next line if you don't have speech synthesis enabled.
#    delay(10.,single("say:"^message)),
#    # We add another output without the synthesized messages. It is not started
#    # but you can turn it on using the server:
#    # > telnet localhost 1234
#    # > novoice.ogg.start
#    out(start=false,mount="novoice.ogg",
#        fallback([ playlist("/your/favorite.m3u"),
#                   # The out(..) needs the single(..) to be infallible,
#                   # which requires a valid audio filename.
#                   single("/some/file.ogg") ]))
#    ],
#    weights=[5,1]))
